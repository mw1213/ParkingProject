--------------------------------------------------------
--  This file was automatically generated by Ocarina  --
--  Do NOT hand-modify this file, as your             --
--  changes will be lost when you re-run Ocarina      --
--------------------------------------------------------
pragma Style_Checks
 ("NM32766");

with Interfaces;
with PolyORB_HI.Port_Type_Marshallers;
with PolyORB_HI.Utils;
with PolyORB_HI_Generated.Activity;
use PolyORB_HI_Generated.Activity;
with PolyORB_HI_Generated.Marshallers;
with Ada.Real_Time;
with PolyORB_HI.Time_Marshallers;

package body PolyORB_HI_Generated.Transport is

  procedure parking_system_inductive_loop_in_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type);

  procedure parking_system_plates_data_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type);

  procedure parking_system_car_passed_entry_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type);

  procedure parking_system_car_parked_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type);

  procedure parking_system_car_moved_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type);

  procedure parking_system_inductive_loop_out_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type);

  procedure parking_system_calculate_price_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type);

  procedure parking_system_open_gate_out_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type);

  procedure parking_system_car_passed_exit_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type);

  -------------
  -- Deliver -- 
  -------------

  procedure Deliver
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
  is
    use PolyORB_HI_Generated.Deployment;
    Msg : PolyORB_HI.Messages.Message_Type;
    Value : Interfaces.Unsigned_16;
    Port : PolyORB_HI_Generated.Deployment.Port_Type;
    use type PolyORB_HI.Streams.Stream_Element_Offset;
  begin
    PolyORB_HI.Messages.Write
     (Msg,
      Message
       ((Message'First
          + PolyORB_HI.Messages.Header_Size) .. Message'Last));
    PolyORB_HI.Port_Type_Marshallers.Unmarshall
     (Value,
      Msg);
    Port :=
     PolyORB_HI.Utils.Corresponding_Port
       (Value);
    if (Entity
      = PolyORB_HI_Generated.Deployment.main_inductive_loop_in_thread_K)
    then
      parking_system_inductive_loop_in_thread_Deliver
       (Port,
        PolyORB_HI.Messages.Sender
         (Message),
        Msg);
    elsif (Entity
      = PolyORB_HI_Generated.Deployment.main_plates_data_thread_K)
    then
      parking_system_plates_data_thread_Deliver
       (Port,
        PolyORB_HI.Messages.Sender
         (Message),
        Msg);
    elsif (Entity
      = PolyORB_HI_Generated.Deployment.main_car_passed_entry_thread_K)
    then
      parking_system_car_passed_entry_thread_Deliver
       (Port,
        PolyORB_HI.Messages.Sender
         (Message),
        Msg);
    elsif (Entity
      = PolyORB_HI_Generated.Deployment.main_car_parked_thread_K)
    then
      parking_system_car_parked_thread_Deliver
       (Port,
        PolyORB_HI.Messages.Sender
         (Message),
        Msg);
    elsif (Entity
      = PolyORB_HI_Generated.Deployment.main_car_moved_thread_K)
    then
      parking_system_car_moved_thread_Deliver
       (Port,
        PolyORB_HI.Messages.Sender
         (Message),
        Msg);
    elsif (Entity
      = PolyORB_HI_Generated.Deployment.main_inductive_loop_out_thread_K)
    then
      parking_system_inductive_loop_out_thread_Deliver
       (Port,
        PolyORB_HI.Messages.Sender
         (Message),
        Msg);
    elsif (Entity
      = PolyORB_HI_Generated.Deployment.main_calculate_price_K)
    then
      parking_system_calculate_price_Deliver
       (Port,
        PolyORB_HI.Messages.Sender
         (Message),
        Msg);
    elsif (Entity
      = PolyORB_HI_Generated.Deployment.main_open_gate_out_thread_K)
    then
      parking_system_open_gate_out_thread_Deliver
       (Port,
        PolyORB_HI.Messages.Sender
         (Message),
        Msg);
    elsif (Entity
      = PolyORB_HI_Generated.Deployment.main_car_passed_exit_thread_K)
    then
      parking_system_car_passed_exit_thread_Deliver
       (Port,
        PolyORB_HI.Messages.Sender
         (Message),
        Msg);
    end if;
  end Deliver;

  function parking_system_inductive_loop_in_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind;

  function parking_system_plates_data_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind;

  function parking_system_car_passed_entry_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind;

  function parking_system_car_parked_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind;

  function parking_system_car_moved_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind;

  function parking_system_inductive_loop_out_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind;

  function parking_system_calculate_price_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind;

  function parking_system_open_gate_out_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind;

  function parking_system_car_passed_exit_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind;

  ----------
  -- Send -- 
  ----------

  function Send
   (From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Messages.Message_Type)
   return PolyORB_HI.Errors.Error_Kind
  is
    use PolyORB_HI_Generated.Deployment;
    Msg : constant PolyORB_HI.Streams.Stream_Element_Array :=
     PolyORB_HI.Messages.Encapsulate
       (Message,
        From,
        Entity);
  begin
    if (From
      = PolyORB_HI_Generated.Deployment.main_inductive_loop_in_thread_K)
    then
      return parking_system_inductive_loop_in_thread_Send
       (Entity,
        Msg);
    elsif (From
      = PolyORB_HI_Generated.Deployment.main_plates_data_thread_K)
    then
      return parking_system_plates_data_thread_Send
       (Entity,
        Msg);
    elsif (From
      = PolyORB_HI_Generated.Deployment.main_car_passed_entry_thread_K)
    then
      return parking_system_car_passed_entry_thread_Send
       (Entity,
        Msg);
    elsif (From
      = PolyORB_HI_Generated.Deployment.main_car_parked_thread_K)
    then
      return parking_system_car_parked_thread_Send
       (Entity,
        Msg);
    elsif (From
      = PolyORB_HI_Generated.Deployment.main_car_moved_thread_K)
    then
      return parking_system_car_moved_thread_Send
       (Entity,
        Msg);
    elsif (From
      = PolyORB_HI_Generated.Deployment.main_inductive_loop_out_thread_K)
    then
      return parking_system_inductive_loop_out_thread_Send
       (Entity,
        Msg);
    elsif (From
      = PolyORB_HI_Generated.Deployment.main_calculate_price_K)
    then
      return parking_system_calculate_price_Send
       (Entity,
        Msg);
    elsif (From
      = PolyORB_HI_Generated.Deployment.main_open_gate_out_thread_K)
    then
      return parking_system_open_gate_out_thread_Send
       (Entity,
        Msg);
    elsif (From
      = PolyORB_HI_Generated.Deployment.main_car_passed_exit_thread_K)
    then
      return parking_system_car_passed_exit_thread_Send
       (Entity,
        Msg);
    else
      return PolyORB_HI.Errors.Error_Kind'
       (PolyORB_HI.Errors.Error_Transport);
    end if;
  end Send;

  -----------------------------------------------------
  -- parking_system_inductive_loop_in_thread_Deliver -- 
  -----------------------------------------------------

  procedure parking_system_inductive_loop_in_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Deployment;
    Thread_Interface_Ü : parking_system_inductive_loop_in_thread_impl_Interface;
  begin
    if (Port
      = PolyORB_HI_Generated.Deployment.main_inductive_loop_in_thread_car_on_loop_K)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (car_on_loop,
        Thread_Interface_Ü,
        Msg);
      PolyORB_HI_Generated.Activity.Store_Received_Message
       (PolyORB_HI_Generated.Deployment.main_inductive_loop_in_thread_K,
        Thread_Interface_Ü,
        From);
    end if;
  end parking_system_inductive_loop_in_thread_Deliver;

  --------------------------------------------------
  -- parking_system_inductive_loop_in_thread_Send -- 
  --------------------------------------------------

  function parking_system_inductive_loop_in_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind
  is
    pragma Warnings
     (Off,
      Message);
    pragma Warnings
     (Off,
      Entity);
  begin
    --  Device
    return PolyORB_HI.Errors.Error_Kind'
     (PolyORB_HI.Errors.Error_Transport);
  end parking_system_inductive_loop_in_thread_Send;

  -----------------------------------------------
  -- parking_system_plates_data_thread_Deliver -- 
  -----------------------------------------------

  procedure parking_system_plates_data_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Deployment;
    Thread_Interface_Ü : parking_system_plates_data_thread_impl_Interface;
    Time_Stamp_Ü : Ada.Real_Time.Time;
  begin
    if (Port
      = PolyORB_HI_Generated.Deployment.main_plates_data_thread_plates_data_in_K)
    then
      PolyORB_HI.Time_Marshallers.Unmarshall
       (Time_Stamp_Ü,
        Msg);
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (plates_data_in,
        Thread_Interface_Ü,
        Msg);
      PolyORB_HI_Generated.Activity.Store_Received_Message
       (PolyORB_HI_Generated.Deployment.main_plates_data_thread_K,
        Thread_Interface_Ü,
        From,
        Time_Stamp_Ü);
    elsif (Port
      = PolyORB_HI_Generated.Deployment.main_plates_data_thread_plates_data_in_event_K)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (plates_data_in_event,
        Thread_Interface_Ü,
        Msg);
      PolyORB_HI_Generated.Activity.Store_Received_Message
       (PolyORB_HI_Generated.Deployment.main_plates_data_thread_K,
        Thread_Interface_Ü,
        From);
    end if;
  end parking_system_plates_data_thread_Deliver;

  --------------------------------------------
  -- parking_system_plates_data_thread_Send -- 
  --------------------------------------------

  function parking_system_plates_data_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind
  is
    pragma Warnings
     (Off,
      Message);
    pragma Warnings
     (Off,
      Entity);
  begin
    --  Device
    return PolyORB_HI.Errors.Error_Kind'
     (PolyORB_HI.Errors.Error_Transport);
  end parking_system_plates_data_thread_Send;

  ----------------------------------------------------
  -- parking_system_car_passed_entry_thread_Deliver -- 
  ----------------------------------------------------

  procedure parking_system_car_passed_entry_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Deployment;
    Thread_Interface_Ü : parking_system_car_passed_entry_thread_impl_Interface;
  begin
    if (Port
      = PolyORB_HI_Generated.Deployment.main_car_passed_entry_thread_car_on_loop_K)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (car_on_loop,
        Thread_Interface_Ü,
        Msg);
      PolyORB_HI_Generated.Activity.Store_Received_Message
       (PolyORB_HI_Generated.Deployment.main_car_passed_entry_thread_K,
        Thread_Interface_Ü,
        From);
    end if;
  end parking_system_car_passed_entry_thread_Deliver;

  -------------------------------------------------
  -- parking_system_car_passed_entry_thread_Send -- 
  -------------------------------------------------

  function parking_system_car_passed_entry_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind
  is
    pragma Warnings
     (Off,
      Message);
    pragma Warnings
     (Off,
      Entity);
  begin
    --  Device
    return PolyORB_HI.Errors.Error_Kind'
     (PolyORB_HI.Errors.Error_Transport);
  end parking_system_car_passed_entry_thread_Send;

  ----------------------------------------------
  -- parking_system_car_parked_thread_Deliver -- 
  ----------------------------------------------

  procedure parking_system_car_parked_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Deployment;
    Thread_Interface_Ü : parking_system_car_parked_thread_impl_Interface;
  begin
    if (Port
      = PolyORB_HI_Generated.Deployment.main_car_parked_thread_car_parked_K)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (car_parked,
        Thread_Interface_Ü,
        Msg);
      PolyORB_HI_Generated.Activity.Store_Received_Message
       (PolyORB_HI_Generated.Deployment.main_car_parked_thread_K,
        Thread_Interface_Ü,
        From);
    end if;
  end parking_system_car_parked_thread_Deliver;

  -------------------------------------------
  -- parking_system_car_parked_thread_Send -- 
  -------------------------------------------

  function parking_system_car_parked_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind
  is
    pragma Warnings
     (Off,
      Message);
    pragma Warnings
     (Off,
      Entity);
  begin
    --  Device
    return PolyORB_HI.Errors.Error_Kind'
     (PolyORB_HI.Errors.Error_Transport);
  end parking_system_car_parked_thread_Send;

  ---------------------------------------------
  -- parking_system_car_moved_thread_Deliver -- 
  ---------------------------------------------

  procedure parking_system_car_moved_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Deployment;
    Thread_Interface_Ü : parking_system_car_moved_thread_impl_Interface;
  begin
    if (Port
      = PolyORB_HI_Generated.Deployment.main_car_moved_thread_car_moved_K)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (car_moved,
        Thread_Interface_Ü,
        Msg);
      PolyORB_HI_Generated.Activity.Store_Received_Message
       (PolyORB_HI_Generated.Deployment.main_car_moved_thread_K,
        Thread_Interface_Ü,
        From);
    end if;
  end parking_system_car_moved_thread_Deliver;

  ------------------------------------------
  -- parking_system_car_moved_thread_Send -- 
  ------------------------------------------

  function parking_system_car_moved_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind
  is
    pragma Warnings
     (Off,
      Message);
    pragma Warnings
     (Off,
      Entity);
  begin
    --  Device
    return PolyORB_HI.Errors.Error_Kind'
     (PolyORB_HI.Errors.Error_Transport);
  end parking_system_car_moved_thread_Send;

  ------------------------------------------------------
  -- parking_system_inductive_loop_out_thread_Deliver -- 
  ------------------------------------------------------

  procedure parking_system_inductive_loop_out_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Deployment;
    Thread_Interface_Ü : parking_system_inductive_loop_out_thread_impl_Interface;
  begin
    if (Port
      = PolyORB_HI_Generated.Deployment.main_inductive_loop_out_thread_car_on_loop_K)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (car_on_loop,
        Thread_Interface_Ü,
        Msg);
      PolyORB_HI_Generated.Activity.Store_Received_Message
       (PolyORB_HI_Generated.Deployment.main_inductive_loop_out_thread_K,
        Thread_Interface_Ü,
        From);
    end if;
  end parking_system_inductive_loop_out_thread_Deliver;

  ---------------------------------------------------
  -- parking_system_inductive_loop_out_thread_Send -- 
  ---------------------------------------------------

  function parking_system_inductive_loop_out_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind
  is
    pragma Warnings
     (Off,
      Message);
    pragma Warnings
     (Off,
      Entity);
  begin
    --  Device
    return PolyORB_HI.Errors.Error_Kind'
     (PolyORB_HI.Errors.Error_Transport);
  end parking_system_inductive_loop_out_thread_Send;

  --------------------------------------------
  -- parking_system_calculate_price_Deliver -- 
  --------------------------------------------

  procedure parking_system_calculate_price_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Deployment;
    Thread_Interface_Ü : parking_system_calculate_price_impl_Interface;
    Time_Stamp_Ü : Ada.Real_Time.Time;
  begin
    if (Port
      = PolyORB_HI_Generated.Deployment.main_calculate_price_plate_number_event_K)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (plate_number_event,
        Thread_Interface_Ü,
        Msg);
      PolyORB_HI_Generated.Activity.Store_Received_Message
       (PolyORB_HI_Generated.Deployment.main_calculate_price_K,
        Thread_Interface_Ü,
        From);
    elsif (Port
      = PolyORB_HI_Generated.Deployment.main_calculate_price_plate_number_K)
    then
      PolyORB_HI.Time_Marshallers.Unmarshall
       (Time_Stamp_Ü,
        Msg);
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (plate_number,
        Thread_Interface_Ü,
        Msg);
      PolyORB_HI_Generated.Activity.Store_Received_Message
       (PolyORB_HI_Generated.Deployment.main_calculate_price_K,
        Thread_Interface_Ü,
        From,
        Time_Stamp_Ü);
    end if;
  end parking_system_calculate_price_Deliver;

  -----------------------------------------
  -- parking_system_calculate_price_Send -- 
  -----------------------------------------

  function parking_system_calculate_price_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind
  is
    pragma Warnings
     (Off,
      Message);
    pragma Warnings
     (Off,
      Entity);
  begin
    --  Device
    return PolyORB_HI.Errors.Error_Kind'
     (PolyORB_HI.Errors.Error_Transport);
  end parking_system_calculate_price_Send;

  -------------------------------------------------
  -- parking_system_open_gate_out_thread_Deliver -- 
  -------------------------------------------------

  procedure parking_system_open_gate_out_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Deployment;
    Thread_Interface_Ü : parking_system_open_gate_out_thread_impl_Interface;
  begin
    if (Port
      = PolyORB_HI_Generated.Deployment.main_open_gate_out_thread_parking_paid_K)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (parking_paid,
        Thread_Interface_Ü,
        Msg);
      PolyORB_HI_Generated.Activity.Store_Received_Message
       (PolyORB_HI_Generated.Deployment.main_open_gate_out_thread_K,
        Thread_Interface_Ü,
        From);
    end if;
  end parking_system_open_gate_out_thread_Deliver;

  ----------------------------------------------
  -- parking_system_open_gate_out_thread_Send -- 
  ----------------------------------------------

  function parking_system_open_gate_out_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind
  is
    pragma Warnings
     (Off,
      Message);
    pragma Warnings
     (Off,
      Entity);
  begin
    --  Device
    return PolyORB_HI.Errors.Error_Kind'
     (PolyORB_HI.Errors.Error_Transport);
  end parking_system_open_gate_out_thread_Send;

  ---------------------------------------------------
  -- parking_system_car_passed_exit_thread_Deliver -- 
  ---------------------------------------------------

  procedure parking_system_car_passed_exit_thread_Deliver
   (Port : PolyORB_HI_Generated.Deployment.Port_Type;
    From : PolyORB_HI_Generated.Deployment.Entity_Type;
    Msg : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Deployment;
    Thread_Interface_Ü : parking_system_car_passed_exit_thread_impl_Interface;
  begin
    if (Port
      = PolyORB_HI_Generated.Deployment.main_car_passed_exit_thread_car_on_loop_K)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (car_on_loop,
        Thread_Interface_Ü,
        Msg);
      PolyORB_HI_Generated.Activity.Store_Received_Message
       (PolyORB_HI_Generated.Deployment.main_car_passed_exit_thread_K,
        Thread_Interface_Ü,
        From);
    end if;
  end parking_system_car_passed_exit_thread_Deliver;

  ------------------------------------------------
  -- parking_system_car_passed_exit_thread_Send -- 
  ------------------------------------------------

  function parking_system_car_passed_exit_thread_Send
   (Entity : PolyORB_HI_Generated.Deployment.Entity_Type;
    Message : PolyORB_HI.Streams.Stream_Element_Array)
   return PolyORB_HI.Errors.Error_Kind
  is
    pragma Warnings
     (Off,
      Message);
    pragma Warnings
     (Off,
      Entity);
  begin
    --  Device
    return PolyORB_HI.Errors.Error_Kind'
     (PolyORB_HI.Errors.Error_Transport);
  end parking_system_car_passed_exit_thread_Send;

end PolyORB_HI_Generated.Transport;
