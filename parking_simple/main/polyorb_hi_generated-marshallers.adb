--------------------------------------------------------
--  This file was automatically generated by Ocarina  --
--  Do NOT hand-modify this file, as your             --
--  changes will be lost when you re-run Ocarina      --
--------------------------------------------------------
pragma Style_Checks
 ("NM32766");

with PolyORB_HI_Generated;
with PolyORB_HI.Marshallers_G;
pragma Elaborate_All (PolyORB_HI.Marshallers_G);

package body PolyORB_HI_Generated.Marshallers is

  --  Marshallers for interface type of thread inductive_loop_in_thread.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.parking_system_inductive_loop_in_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    pragma Unreferenced
     (Data);
  begin
    null;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.parking_system_inductive_loop_in_thread_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.parking_system_inductive_loop_in_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.car_on_loop)
    then
      Data :=
       PolyORB_HI_Generated.Activity.parking_system_inductive_loop_in_thread_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.car_on_loop);
    end if;
  end Unmarshall;

  --  Marshallers for interface type of thread plates_data_thread.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.parking_system_plates_data_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    pragma Unreferenced
     (Data);
  begin
    null;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.parking_system_plates_data_thread_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.parking_system_plates_data_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    plates_data_in_DATA : PolyORB_HI_Generated.Types.Integer;
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.plates_data_in)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (plates_data_in_DATA,
        Message);
      Data :=
       PolyORB_HI_Generated.Activity.parking_system_plates_data_thread_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.plates_data_in,
          plates_data_in_DATA => plates_data_in_DATA);
    elsif (Port
      = PolyORB_HI_Generated.Activity.plates_data_in_event)
    then
      Data :=
       PolyORB_HI_Generated.Activity.parking_system_plates_data_thread_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.plates_data_in_event);
    end if;
  end Unmarshall;

  --  Marshallers for DATA type integer

  package Integer_Marshallers is
   new PolyORB_HI.Marshallers_G
     (PolyORB_HI_Generated.Types.Integer);

  procedure Marshall
   (Data : PolyORB_HI_Generated.Types.Integer;
    Message : in out PolyORB_HI.Messages.Message_Type)
   renames Integer_Marshallers.Marshall;

  procedure Unmarshall
   (Data : out PolyORB_HI_Generated.Types.Integer;
    Message : in out PolyORB_HI.Messages.Message_Type)
   renames Integer_Marshallers.Unmarshall;

  --  Marshallers for interface type of thread car_passed_entry_thread.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.parking_system_car_passed_entry_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    pragma Unreferenced
     (Data);
  begin
    null;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.parking_system_car_passed_entry_thread_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.parking_system_car_passed_entry_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.car_on_loop)
    then
      Data :=
       PolyORB_HI_Generated.Activity.parking_system_car_passed_entry_thread_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.car_on_loop);
    end if;
  end Unmarshall;

  --  Marshallers for interface type of thread car_parked_thread.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.parking_system_car_parked_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Activity;
  begin
    if (Data.Port
      = PolyORB_HI_Generated.Activity.slots_number)
    then
      PolyORB_HI_Generated.Marshallers.Marshall
       (Data.slots_number_DATA,
        Message);
    end if;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.parking_system_car_parked_thread_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.parking_system_car_parked_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.car_parked)
    then
      Data :=
       PolyORB_HI_Generated.Activity.parking_system_car_parked_thread_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.car_parked);
    end if;
  end Unmarshall;

  --  Marshallers for interface type of thread car_moved_thread.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.parking_system_car_moved_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Activity;
  begin
    if (Data.Port
      = PolyORB_HI_Generated.Activity.slots_number)
    then
      PolyORB_HI_Generated.Marshallers.Marshall
       (Data.slots_number_DATA,
        Message);
    end if;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.parking_system_car_moved_thread_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.parking_system_car_moved_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.car_moved)
    then
      Data :=
       PolyORB_HI_Generated.Activity.parking_system_car_moved_thread_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.car_moved);
    end if;
  end Unmarshall;

  --  Marshallers for interface type of thread inductive_loop_out_thread.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.parking_system_inductive_loop_out_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    pragma Unreferenced
     (Data);
  begin
    null;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.parking_system_inductive_loop_out_thread_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.parking_system_inductive_loop_out_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.car_on_loop)
    then
      Data :=
       PolyORB_HI_Generated.Activity.parking_system_inductive_loop_out_thread_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.car_on_loop);
    end if;
  end Unmarshall;

  --  Marshallers for interface type of thread calculate_price.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.parking_system_calculate_price_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    use PolyORB_HI_Generated.Activity;
  begin
    if (Data.Port
      = PolyORB_HI_Generated.Activity.calculated_price)
    then
      PolyORB_HI_Generated.Marshallers.Marshall
       (Data.calculated_price_DATA,
        Message);
    end if;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.parking_system_calculate_price_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.parking_system_calculate_price_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    plate_number_DATA : PolyORB_HI_Generated.Types.Integer;
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.plate_number_event)
    then
      Data :=
       PolyORB_HI_Generated.Activity.parking_system_calculate_price_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.plate_number_event);
    elsif (Port
      = PolyORB_HI_Generated.Activity.plate_number)
    then
      PolyORB_HI_Generated.Marshallers.Unmarshall
       (plate_number_DATA,
        Message);
      Data :=
       PolyORB_HI_Generated.Activity.parking_system_calculate_price_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.plate_number,
          plate_number_DATA => plate_number_DATA);
    end if;
  end Unmarshall;

  --  Marshallers for interface type of thread open_gate_out_thread.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.parking_system_open_gate_out_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    pragma Unreferenced
     (Data);
  begin
    null;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.parking_system_open_gate_out_thread_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.parking_system_open_gate_out_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.parking_paid)
    then
      Data :=
       PolyORB_HI_Generated.Activity.parking_system_open_gate_out_thread_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.parking_paid);
    end if;
  end Unmarshall;

  --  Marshallers for interface type of thread car_passed_exit_thread.impl

  --------------
  -- Marshall -- 
  --------------

  procedure Marshall
   (Data : PolyORB_HI_Generated.Activity.parking_system_car_passed_exit_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    pragma Unreferenced
     (Data);
  begin
    null;
  end Marshall;

  ----------------
  -- Unmarshall -- 
  ----------------

  procedure Unmarshall
   (Port : PolyORB_HI_Generated.Activity.parking_system_car_passed_exit_thread_impl_Port_Type;
    Data : out PolyORB_HI_Generated.Activity.parking_system_car_passed_exit_thread_impl_Interface;
    Message : in out PolyORB_HI.Messages.Message_Type)
  is
    pragma Unreferenced
     (Message);
    use PolyORB_HI_Generated.Activity;
  begin
    if (Port
      = PolyORB_HI_Generated.Activity.car_on_loop)
    then
      Data :=
       PolyORB_HI_Generated.Activity.parking_system_car_passed_exit_thread_impl_Interface'
         (Port => PolyORB_HI_Generated.Activity.car_on_loop);
    end if;
  end Unmarshall;

end PolyORB_HI_Generated.Marshallers;
